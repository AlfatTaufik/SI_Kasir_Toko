#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SI_Kasir_Toko
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SI_KASIR_PBO")]
	public partial class DBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBarang(Barang instance);
    partial void UpdateBarang(Barang instance);
    partial void DeleteBarang(Barang instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public DBContextDataContext() : 
				base(global::SI_Kasir_Toko.Properties.Settings.Default.SI_KASIR_PBOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Barang> Barangs
		{
			get
			{
				return this.GetTable<Barang>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Barang")]
	public partial class Barang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NamaBarang;
		
		private int _HargaBarang;
		
		private int _StokBarang;
		
		private System.DateTime _DataMasuk;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNamaBarangChanging(string value);
    partial void OnNamaBarangChanged();
    partial void OnHargaBarangChanging(int value);
    partial void OnHargaBarangChanged();
    partial void OnStokBarangChanging(int value);
    partial void OnStokBarangChanged();
    partial void OnDataMasukChanging(System.DateTime value);
    partial void OnDataMasukChanged();
    #endregion
		
		public Barang()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaBarang", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NamaBarang
		{
			get
			{
				return this._NamaBarang;
			}
			set
			{
				if ((this._NamaBarang != value))
				{
					this.OnNamaBarangChanging(value);
					this.SendPropertyChanging();
					this._NamaBarang = value;
					this.SendPropertyChanged("NamaBarang");
					this.OnNamaBarangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HargaBarang", DbType="Int NOT NULL")]
		public int HargaBarang
		{
			get
			{
				return this._HargaBarang;
			}
			set
			{
				if ((this._HargaBarang != value))
				{
					this.OnHargaBarangChanging(value);
					this.SendPropertyChanging();
					this._HargaBarang = value;
					this.SendPropertyChanged("HargaBarang");
					this.OnHargaBarangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StokBarang", DbType="Int NOT NULL")]
		public int StokBarang
		{
			get
			{
				return this._StokBarang;
			}
			set
			{
				if ((this._StokBarang != value))
				{
					this.OnStokBarangChanging(value);
					this.SendPropertyChanging();
					this._StokBarang = value;
					this.SendPropertyChanged("StokBarang");
					this.OnStokBarangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataMasuk", DbType="DateTime NOT NULL")]
		public System.DateTime DataMasuk
		{
			get
			{
				return this._DataMasuk;
			}
			set
			{
				if ((this._DataMasuk != value))
				{
					this.OnDataMasukChanging(value);
					this.SendPropertyChanging();
					this._DataMasuk = value;
					this.SendPropertyChanged("DataMasuk");
					this.OnDataMasukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Barang_Transaction", Storage="_Transactions", ThisKey="ID", OtherKey="IDBarang")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Barang = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Barang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private bool _Role;
		
		private string _Fullname;
		
		private string _Email;
		
		private string _Alamat;
		
		private System.DateTime _MasukAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(bool value);
    partial void OnRoleChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAlamatChanging(string value);
    partial void OnAlamatChanged();
    partial void OnMasukAtChanging(System.DateTime value);
    partial void OnMasukAtChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Bit NOT NULL")]
		public bool Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alamat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Alamat
		{
			get
			{
				return this._Alamat;
			}
			set
			{
				if ((this._Alamat != value))
				{
					this.OnAlamatChanging(value);
					this.SendPropertyChanging();
					this._Alamat = value;
					this.SendPropertyChanged("Alamat");
					this.OnAlamatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasukAt", DbType="DateTime NOT NULL")]
		public System.DateTime MasukAt
		{
			get
			{
				return this._MasukAt;
			}
			set
			{
				if ((this._MasukAt != value))
				{
					this.OnMasukAtChanging(value);
					this.SendPropertyChanging();
					this._MasukAt = value;
					this.SendPropertyChanged("MasukAt");
					this.OnMasukAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDBarang;
		
		private int _JumlahTransaksi;
		
		private int _TotalHarga;
		
		private System.DateTime _TransaksiAt;
		
		private EntityRef<Barang> _Barang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDBarangChanging(int value);
    partial void OnIDBarangChanged();
    partial void OnJumlahTransaksiChanging(int value);
    partial void OnJumlahTransaksiChanged();
    partial void OnTotalHargaChanging(int value);
    partial void OnTotalHargaChanged();
    partial void OnTransaksiAtChanging(System.DateTime value);
    partial void OnTransaksiAtChanged();
    #endregion
		
		public Transaction()
		{
			this._Barang = default(EntityRef<Barang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBarang", DbType="Int NOT NULL")]
		public int IDBarang
		{
			get
			{
				return this._IDBarang;
			}
			set
			{
				if ((this._IDBarang != value))
				{
					if (this._Barang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBarangChanging(value);
					this.SendPropertyChanging();
					this._IDBarang = value;
					this.SendPropertyChanged("IDBarang");
					this.OnIDBarangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JumlahTransaksi", DbType="Int NOT NULL")]
		public int JumlahTransaksi
		{
			get
			{
				return this._JumlahTransaksi;
			}
			set
			{
				if ((this._JumlahTransaksi != value))
				{
					this.OnJumlahTransaksiChanging(value);
					this.SendPropertyChanging();
					this._JumlahTransaksi = value;
					this.SendPropertyChanged("JumlahTransaksi");
					this.OnJumlahTransaksiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHarga", DbType="Int NOT NULL")]
		public int TotalHarga
		{
			get
			{
				return this._TotalHarga;
			}
			set
			{
				if ((this._TotalHarga != value))
				{
					this.OnTotalHargaChanging(value);
					this.SendPropertyChanging();
					this._TotalHarga = value;
					this.SendPropertyChanged("TotalHarga");
					this.OnTotalHargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransaksiAt", DbType="DateTime NOT NULL")]
		public System.DateTime TransaksiAt
		{
			get
			{
				return this._TransaksiAt;
			}
			set
			{
				if ((this._TransaksiAt != value))
				{
					this.OnTransaksiAtChanging(value);
					this.SendPropertyChanging();
					this._TransaksiAt = value;
					this.SendPropertyChanged("TransaksiAt");
					this.OnTransaksiAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Barang_Transaction", Storage="_Barang", ThisKey="IDBarang", OtherKey="ID", IsForeignKey=true)]
		public Barang Barang
		{
			get
			{
				return this._Barang.Entity;
			}
			set
			{
				Barang previousValue = this._Barang.Entity;
				if (((previousValue != value) 
							|| (this._Barang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Barang.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Barang.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._IDBarang = value.ID;
					}
					else
					{
						this._IDBarang = default(int);
					}
					this.SendPropertyChanged("Barang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
